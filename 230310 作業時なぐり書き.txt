これまでに検索機能の実装まで終わったので、データを更新する部分を作る

まずはボタンを有効化させる必要がある、すなわち、できたviewに対して初期化を施してイベントリスナーを設定する必要がある

そしてイベントハンドラで、updateを呼び出す。このときにdata-id属性を有効に使えるように


まず最初にやるべきは、作成や検索をした後のviewにイベントリスナーを設定することだ。
おそらく、mainで#view-topをInitするときのが参考になるはずだ。
で改めてコードみてみたけど、Initクラスを作ってそのインスタンスが各viewに対応するってのはどうなんだろうか？？viewにinit関数があったほうがシンプルじゃね？？
従来のInitを、イベントハンドラを格納するクラスに返るのも手だと思う

※もともとは
const viewTop = document.getElementById("view-top");
new Init(new View(viewTop)).init();
こういう感じで、Initクラスのインスタンスからinitializeしていた

作成や検索をした後のviewにイベントリスナーを設定した（controllerでasync即時関数内でview.init()をしてイベントハンドラを呼び出している）
それによって更新・削除のボタンが押せるようになった

なので今度は、イベントハンドラを細かく作っていく
データ削除とかはいらない。ボタンが押されたら、すぐデータを整形してスプシとの通信を始めちゃって大丈夫だと思う

Controller.update()を今から書くところ、ってとこで一旦中断
再開。Controller.update()でasyncの即時関数の中で、const modelResponse = await GasApiClient.httpPostRequest()にリクエストを投げるところまでできた
だから今度はmodel.gsのGASコードを書く



コンフリクトに対応できるように作るのは思ってるより大変かもしれない
が、GASでレスポンスが返ってくるところまで書けた。はず

返ってきたレスポンスに対して、今回(update)は特にviewを改変せず、alertを表示するだけにした



次はdelete機能の実装
もちろん実際に削除するのではなく、フラグをつけるだけ。@deleteや@importantにupdate処理がちゃんと反応するように作り変えておいて、delete()では、infoに@deleteと付け加えてからupdate()を呼び出す、という実装にしたい
ということは、deleteからいきなり作り始めるとわかりにくくなる可能性がある。そこでまずは、update()が、@deleteを検知したらそのデータを非表示にする処理を行うようにする、また、read()が、@deleteを検知したらそのデータを検索結果から除外するという処理を実装するほうがわかりやすいだろう。（ただし、@deleteとつけて検索をしたならば、



今のところのupdateの改造の構想：
基本的にはGAS側のmodel.gsに変更を加えていくことになると思う。
リクエストdeleteとupdateで、最終的にはどちらもupdateとして処理されるのは少し気持ち悪い。deleteだったら普通に削除しましたメッセージで、updateだったら「@deleteと書かれていたため、削除扱いにしました」って書くぐらいの違いはあっていいと思う。
あと、updateで@deleteなら他の欄の変更も反映しつつの削除フラグで、deleteで@deleteならデータベース側の他の部分は一切変更せずに、ただ元のデータに@deleteをつけて非表示にする、という違いをつくってもいい
あと、deleteで@deleteならviewも消しちゃうけど、updateで@deleteならviewを消さずに一応「@deleteと書かれていたため削除扱いにしました」としつつもviewを消さない、という風にするほうが、誤って@deleteをつけてしまった場合にもとに戻しやすい
まぁ、結局GASのmodel.gs上ではupdateとdeleteはあんま変わらないってことになるのかも。でも、処理の中でも非表示化を担う部分は別で関数として作っといて、updateとdeleteのコード自体はちゃんと分けて書いておく、のが一番いいだろう（←改めて説明：updateとdeleteでの処理の違いを明確化するためにも、deleteの中でupdateを直接呼び出すのはやめたい。代わりに、非表示化を担う部分を別の関数（メソッド）として作っといて、それをdeleteもupdateも共通して呼び出すようにしたい)